[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\BMDTEC~1\AppData\Local\Temp\idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\BMDTEC~1\AppData\Local\Temp\idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 257.3088ms
[debug]           Load.loadUnit: plugins took 186.132ms
[debug]           Load.loadUnit: defsScala took 0.434ms
[debug] [Loading] Scanning directory C:\Users\bmd tech\IdeaProjects\Projet\project
[debug]             Load.loadUnit: mkEval took 13.6995ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.3332 ms
[info] loading settings for project projet-build from idea7.sbt ...
[debug]               Load.resolveProject(projet-build) took 54.6678ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet-build, base: C:\Users\bmd tech\IdeaProjects\Projet\project, plugins: List(<none>))) took 99.5631ms
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet\project, returning: (projet-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 533.2043ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.1951ms
[debug]         Load.loadUnit(file:/C:/Users/bmd%20tech/IdeaProjects/Projet/project/, ...) took 737.4867ms
[debug]       Load.apply: load took 913.7313ms
[debug]       Load.apply: resolveProjects took 6.8958ms
[debug]       Load.apply: finalTransforms took 92.1031ms
[debug]       Load.apply: config.delegates took 17.1837ms
[debug]       Load.apply: Def.make(settings)... took 761.4193ms
[debug]       Load.apply: structureIndex took 163.0685ms
[debug]       Load.apply: mkStreams took 6.4376ms
[info] loading project definition from C:\Users\bmd tech\IdeaProjects\Projet\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3404.7726ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\bmd tech\IdeaProjects\Projet
[debug]       Load.loadUnit: mkEval took 0.2822ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4089 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 56.4087ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\bmd tech\IdeaProjects\Projet, plugins: List(<none>))) took 63.2114ms
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 138.9533ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.2907ms
[debug]   Load.loadUnit(file:/C:/Users/bmd%20tech/IdeaProjects/Projet/, ...) took 3558.9699ms
[debug] Load.apply: load took 3638.8148ms
[debug] Load.apply: resolveProjects took 0.5806ms
[debug] Load.apply: finalTransforms took 63.0014ms
[debug] Load.apply: config.delegates took 0.6071ms
[debug] Load.apply: Def.make(settings)... took 107.0178ms
[debug] Load.apply: structureIndex took 32.2523ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to Projet (in build file:/C:/Users/bmd%20tech/IdeaProjects/Projet/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49966 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49966, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Projet (in build file:/C:/Users/bmd%20tech/IdeaProjects/Projet/)
[debug] > Exec(idea-shell, None, None)
