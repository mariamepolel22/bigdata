[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\BMDTEC~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\BMDTEC~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 301.3318ms
[debug]           Load.loadUnit: plugins took 169.7527ms
[debug]           Load.loadUnit: defsScala took 0.4633ms
[debug] [Loading] Scanning directory C:\Users\bmd tech\IdeaProjects\Projet\project
[debug]             Load.loadUnit: mkEval took 15.5627ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.9063 ms
[info] loading settings for project projet-build from idea.sbt ...
[debug]               Load.resolveProject(projet-build) took 52.3269ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet-build, base: C:\Users\bmd tech\IdeaProjects\Projet\project, plugins: List(<none>))) took 100.4228ms
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet\project, returning: (projet-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4229.6923ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.9712ms
[debug]         Load.loadUnit(file:/C:/Users/bmd%20tech/IdeaProjects/Projet/project/, ...) took 4427.6879ms
[debug]       Load.apply: load took 4604.7466ms
[debug]       Load.apply: resolveProjects took 4.9153ms
[debug]       Load.apply: finalTransforms took 117.0338ms
[debug]       Load.apply: config.delegates took 9.7803ms
[debug]       Load.apply: Def.make(settings)... took 655.1224ms
[debug]       Load.apply: structureIndex took 115.6649ms
[debug]       Load.apply: mkStreams took 1.419ms
[info] loading project definition from C:\Users\bmd tech\IdeaProjects\Projet\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7493.6348ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\bmd tech\IdeaProjects\Projet
[debug]       Load.loadUnit: mkEval took 0.2002ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1417 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.605ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\bmd tech\IdeaProjects\Projet, plugins: List(<none>))) took 47.7463ms
[debug] [Loading] Done in C:\Users\bmd tech\IdeaProjects\Projet, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1115.5032ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.0258ms
[debug]   Load.loadUnit(file:/C:/Users/bmd%20tech/IdeaProjects/Projet/, ...) took 8627.2505ms
[debug] Load.apply: load took 8670.6687ms
[debug] Load.apply: resolveProjects took 0.1183ms
[debug] Load.apply: finalTransforms took 50.8717ms
[debug] Load.apply: config.delegates took 0.3628ms
[debug] Load.apply: Def.make(settings)... took 75.2527ms
[debug] Load.apply: structureIndex took 22.0019ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to Projet (in build file:/C:/Users/bmd%20tech/IdeaProjects/Projet/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52486 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52486, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Projet (in build file:/C:/Users/bmd%20tech/IdeaProjects/Projet/)
[debug] > Exec(idea-shell, None, None)
